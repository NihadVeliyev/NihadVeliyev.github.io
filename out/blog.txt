1:"$Sreact.fragment"
3:I[87555,[],""]
4:I[31295,[],""]
5:I[69243,["760","static/chunks/f7333993-9afb768739e4a113.js","506","static/chunks/f97e080b-4671e2b299f6113a.js","446","static/chunks/53c13509-9bf35df096df279b.js","843","static/chunks/843-944049e8d7e6807b.js","557","static/chunks/557-13d6bb43fd59e69c.js","400","static/chunks/400-1ef676e9362ab98e.js","831","static/chunks/app/blog/page-444bbc96a3b60ae6.js"],""]
6:I[84692,["760","static/chunks/f7333993-9afb768739e4a113.js","506","static/chunks/f97e080b-4671e2b299f6113a.js","446","static/chunks/53c13509-9bf35df096df279b.js","843","static/chunks/843-944049e8d7e6807b.js","557","static/chunks/557-13d6bb43fd59e69c.js","400","static/chunks/400-1ef676e9362ab98e.js","831","static/chunks/app/blog/page-444bbc96a3b60ae6.js"],"default"]
10:I[61798,["760","static/chunks/f7333993-9afb768739e4a113.js","506","static/chunks/f97e080b-4671e2b299f6113a.js","446","static/chunks/53c13509-9bf35df096df279b.js","843","static/chunks/843-944049e8d7e6807b.js","557","static/chunks/557-13d6bb43fd59e69c.js","400","static/chunks/400-1ef676e9362ab98e.js","831","static/chunks/app/blog/page-444bbc96a3b60ae6.js"],"Mailchimp"]
11:I[59665,[],"MetadataBoundary"]
13:I[59665,[],"OutletBoundary"]
16:I[74911,[],"AsyncMetadataOutlet"]
18:I[59665,[],"ViewportBoundary"]
1a:I[26614,[],""]
:HL["/_next/static/css/0fa6d1f2668da893.css","style"]
:HL["/_next/static/css/68b8b397103f6052.css","style"]
:HL["/_next/static/css/4b2efc9bab881985.css","style"]
:HL["/_next/static/css/c2000b85886bf461.css","style"]
:HL["/_next/static/css/dde74e833c17b4cf.css","style"]
:HL["/_next/static/css/ef46db3751d8e999.css","style"]
7:T465,
## About

Magic Portfolio is a comprehensive, MDX-based, SEO-friendly, responsive portfolio template built with Once UI and Next.js.

## License

Magic Portfolio is licensed under the [CC BY-NC 4.0](https://creativecommons.org/licenses/by-nc/4.0/). You can only use it for personal purposes, and you must attribute the original work. The attribution is added in the footer by default, but you can place it in any other, visible part of your site.

Subscribe to the [Once UI Pro plan](https://once-ui.com/pricing) to extend the license to [Dopler CC](https://once-ui.com/products/magic-portfolio).

## Quick start

Clone the git repository:

<CodeBlock compact marginBottom="16" codes={[
  {
    code: "git clone https://github.com/once-ui-system/magic-portfolio.git",
    language: "bash"
  }
]} />

Install the necessary dependencies:

<CodeBlock compact marginBottom="16" codes={[
  {
    code: "npm install",
    language: "bash"
  }
]} />

Start the local development server:

<CodeBlock compact marginBottom="16" codes={[
  {
    code: "npm run dev",
    language: "bash"
  }
]} />8:T4cd,
## Enable or disable pages

Magic Portfolio's `RouteGuard` component takes care of conditionally rendering pages based on the `routes` object in the `resources/config.js` file.

<CodeBlock
    marginBottom="16"
    highlight="6"
    codes={[
  {
    code:
`const routes = {
    '/':        true,
    '/about':   true,
    '/work':    true,
    '/blog':    true,
    '/gallery': false,
};`,
    language: "tsx",
    label: "src/app/resources/config.js"
  }
]} />

The code above will ensure that the `/gallery` page is not accessible and is not displayed in the navigation.

## Add new pages

When creating a new page, it needs to be added to the `routes` object in the `resources/config.js` file.

<CodeBlock
    marginBottom="16"
    highlight="6"
    codes={[
  {
    code:
`const routes = {
    '/':        true,
    '/about':   true,
    '/work':    true,
    '/blog':    true,
    '/gallery': false,
    '/music': true,
};`,
    language: "tsx",
    label: "src/app/resources/config.js"
  }
]} />

The code above will ensure that the `/music` page is accessible. Users will be able to navigate to it after adding it to the navigation menu in the `components/Header.tsx` file.9:T8cf,
## Global style

Magic Portfolio's styling is based on Once UI's customization through data-attributes. You can generate a custom color palette for brand, accent and neutral colors on [Once UI](https://once-ui.com/customize) where you'll find instructions on how to apply it.

<CodeBlock
    marginBottom="16"
    codes={[
  {
    code:
`theme:       'dark',         // dark | light
neutral:     'gray',         // sand | gray | slate
brand:       'blue',         // blue | indigo | violet | magenta | pink | red | orange | yellow | moss | green | emerald | aqua | cyan
accent:      'indigo',       // blue | indigo | violet | magenta | pink | red | orange | yellow | moss | green | emerald | aqua | cyan
solid:       'contrast',     // color | contrast
solidStyle:  'flat',         // flat | plastic
border:      'playful',      // rounded | playful | conservative
surface:     'translucent',  // filled | translucent
transition:  'all',          // all | micro | macro
scaling:     '100',          // 90 | 95 | 100 | 105 | 110`, 
    language: "tsx",
    label: "src/app/resources/config.js"
  }
]} />

## Background effect

There's a pre-configured background in `layout.tsx` that you can modify in the config file. Set graphic elements such as gradient, dots, lines, and grid and configure their appearance.

<CodeBlock
    codeHeight={24}
    marginBottom="16"
    codes={[
  {
    code:
`const effects = {
    mask: {
      cursor: false,
      x: 50,
      y: 0,
      radius: 100
    },
    gradient: {
      display: true,
      x: 50,
      y: -25,
      width: 100,
      height: 100,
      tilt: 0,
      colorStart: 'accent-background-strong',
      colorEnd: 'static-transparent',
      opacity: 50
    },
    dots: {
      display: true,
      size: 2,
      color: 'brand-on-background-weak',
      opacity: 20
    },
    lines: {
      display: false,
      color: 'neutral-alpha-weak',
      opacity: 100
    },
    grid: {
      display: false,
      color: 'neutral-alpha-weak',
      opacity: 100,
      width: 'var(--static-space-32)',
      height: 'var(--static-space-32)'
    }
}`, 
    language: "tsx",
    label: "src/app/resources/config.js"
  }
]} />a:T4a15,
Magic Portfolio will replace some default HTML elements to Once UI components to integrate better in the design and add additional functionality. Furthermore, many common Once UI components are already imported and available for use.

## Feedback

The feedback component is used to display critical information to visitors.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    codeHeight={24}
    preview={<Feedback icon title="Feedback element" variant="success" description="Longer description of the feedback message." marginBottom="24"/>}
    codes={[
      {
        code:
`<Feedback
    icon
    variant="success"
    title="Feedback element"
    description="Longer description of the feedback message."
/>`,
        language: "tsx",
        label: "Feedback"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/feedback" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

## Table

Tables are used to display data in a structured format.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    preview={
    <Table 
      data={{
        headers: [
          { content: "Name", key: "name", sortable: true },
          { content: "Type", key: "type", sortable: true },
          { content: "Description", key: "description" }
        ],
        rows: [
          ["title", "string", "The title of the document"],
          ["summary", "string", "A brief summary of the document content"],
          ["updatedAt", "string", "The date when the document was last updated"],
          ["navLabel", "string", "The label used in navigation menus"]
        ]
      }}
    />}
    codes={[
      {
        code:
`<Table 
    data={{
      headers: [
        { content: "Name", key: "name", sortable: true },
        { content: "Type", key: "type", sortable: true },
        { content: "Description", key: "description" }
      ],
      rows: [
        ["title", "string", "The title of the document"],
        ["summary", "string", "A brief summary of the document content"],
        ["updatedAt", "string", "The date when the document was last updated"],
        ["navLabel", "string", "The label used in navigation menus"]
      ]
    }}
/>`,
        language: "tsx",
        label: "Table"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/table" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

## Code

Use the CodeBlock component to display code snippets with code highlighting, preview, and copy to clipboard functionality. Use the InlineCode component for inline code snippets.

### CodeBlock

The code block component works based on Once UI's CodeBlock. You can access it with the complete syntax for full customization, or by using the standard markdown syntax (triple backticks) with pre-configured props.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    codes={[
      {
        code:
`// Full component syntax
<CodeBlock
    codes={[
      {
        code: "console.log('Hello, World!');",
        language: "javascript",
        label: "Example"
      }
    ]}
/>

// Short syntax example
\`\`\`tsx
function greeting(name) {
    return \`Hello, \${name}!\`;
}

console.log(greeting('World'));
\`\`\``,
        language: "tsx",
        label: "CodeBlock"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/codeBlock" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

### InlineCode

The `InlineCode` is another Once UI component that you can access either through the complete syntax or the short syntax (backticks). Usually the standard markdown syntax is recommended, since it doesn't have that much configuration options.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    codeHeight={24}
    preview={
    <InlineCode>
        const x = 10;
    </InlineCode>}
    codes={[
      {
        code:
`// Full component syntax
<InlineCode>
    const x = 10;
</InlineCode>

// Short syntax example
\`const x = 10;\``,
        language: "tsx",
        label: "InlineCode"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/inlineCode" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

## Accordion

Accordions are used to toggle between hiding and showing content.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    preview={
      <AccordionGroup 
        items={[
          {
            title: "Section 1",
            content: <Text variant="body-default-s" onBackground="neutral-weak">This is the content for section 1. You can include any components here.</Text>
          },
          {
            title: "Section 2",
            content: <Text variant="body-default-s" onBackground="neutral-weak">This is the content for section 2. Accordions are great for FAQs and other expandable content.</Text>
          },
          {
            title: "Section 3",
            content: <Text variant="body-default-s" onBackground="neutral-weak">This is the content for section 3. They help save space by hiding content until needed.</Text>
          }
        ]}
      />
    }
    codes={[
      {
        code:
`<AccordionGroup 
    items={[
      {
        title: "Section 1",
        content: <Text>This is the content for section 1.</Text>
      },
      {
        title: "Section 2",
        content: <Text>This is the content for section 2.</Text>
      },
      {
        title: "Section 3",
        content: <Text>This is the content for section 3.</Text>
      }
    ]}
/>`,
        language: "tsx",
        label: "Accordion"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/accordion" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

## Button

Buttons are used to trigger actions or navigate to other pages.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    codeHeight={24}
    preview={
    <Row gap="8" marginBottom="16" marginTop="8">
      <Button variant="primary" label="Primary" />
      <Button variant="secondary" label="Secondary" />
      <Button variant="tertiary" label="Tertiary" />
    </Row>}
    codes={[
      {
        code:
`<Row gap="8">
  <Button variant="primary" label="Primary" />
  <Button variant="secondary" label="Secondary" />
  <Button variant="tertiary" label="Tertiary" />
</Row>`,
        language: "tsx",
        label: "Button"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/button" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

## Card

Cards are used to group related content and actions.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    preview={
    <Row fillWidth horizontal="center">
      <Card
        href=" "
        maxWidth={20}
        radius="l-4"
        direction="column"
        padding="4"
        gap="8"
      >
        <Media src="/images/projects/project-01/cover-01.jpg" aspectRatio="16/9" radius="l" sizes="400px" />
        <Column fillWidth padding="12" gap="8" horizontal="start">
          <Text variant="heading-strong-m" onBackground="neutral-strong" align="left">
            Card Title
          </Text>
          <Text variant="body-default-s" onBackground="neutral-weak" align="left">
            This is a description of the card. It can contain multiple lines of text.
          </Text>
        </Column>
      </Card>
    </Row>
    }
    codes={[
      {
        code:
`<Card
    href=" "
    maxWidth={20}
    radius="l-4"
    direction="column"
    padding="4"
  >
    <Media src="/images/projects/project-01/cover-01.jpg" aspectRatio="16/9" radius="l" sizes="400px" />
    <Column fillWidth padding="12" gap="8" horizontal="start">
      <Text variant="heading-strong-m" onBackground="neutral-strong" align="left">
        Card Title
      </Text>
      <Text variant="body-default-s" onBackground="neutral-weak" align="left">
        This is a description of the card. It can contain multiple lines of text.
      </Text>
    </Column>
</Card>`,
        language: "tsx",
        label: "Card"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/card" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

## Icon

Icons are used to visually represent actions, objects, or concepts. For instructions on importing new icons, head over to [the Once UI documentation](https://once-ui.com/docs/icons).

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    codeHeight={24}
    preview={<Row gap="24" wrap>
      <Icon name="rocket" onBackground="danger-medium" size="m" />
      <Icon name="close" size="m" />
      <Icon name="check" onBackground="success-medium" size="m" />
      <Icon name="info" onBackground="info-medium" size="m" />
      <Icon name="warning" onBackground="warning-medium" size="m" />
      <Icon name="chevronDown" size="m" />
      <Icon name="search" size="m" />
    </Row>}
    codes={[
      {
        code:
`<Icon name="rocket" size="m" />
<Icon name="close" size="m" />
<Icon name="check" onBackground="success-medium" size="m" />
<Icon name="info" onBackground="info-medium" size="m" />
<Icon name="warning" onBackground="warning-medium" size="m" />
<Icon name="chevronDown" size="m" />
<Icon name="search" size="m" />`,
        language: "tsx",
        label: "Icon"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/icon" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

## Layout

Layout components help structure content on the page.

### Flex

The Flex component is accessible as `Column` and `Row` and can handle a wide range of layout options and style properties.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    preview={
    <Row
      fillWidth
      mobileDirection="column"
      gap="16"
    >
      <Column fillWidth border="neutral-alpha-medium" padding="16" radius="m">
        <Row padding="8">Row Item</Row>
        <Row padding="8">Row Item</Row>
      </Column>
      <Column fillWidth border="neutral-alpha-medium" padding="16" radius="m">
        <Row padding="8">Row Item</Row>
        <Row padding="8">Row Item</Row>
      </Column>
      <Column fillWidth border="neutral-alpha-medium" padding="16" radius="m">
        <Row padding="8">Row Item</Row>
        <Row padding="8">Row Item</Row>
      </Column>
      <Column fillWidth border="neutral-alpha-medium" padding="16" radius="m">
        <Row padding="8">Row Item</Row>
        <Row padding="8">Row Item</Row>
      </Column>
    </Row>}
    codeHeight={24}
    codes={[
      {
        code:
`<Row
    fillWidth
    mobileDirection="column"
    gap="16"
  >
    <Column fillWidth border="neutral-alpha-medium" padding="16" radius="m">
      <Row padding="8">Row Item</Row>
      <Row padding="8">Row Item</Row>
    </Column>
    <Column fillWidth border="neutral-alpha-medium" padding="16" radius="m">
      <Row padding="8">Row Item</Row>
      <Row padding="8">Row Item</Row>
    </Column>
    <Column fillWidth border="neutral-alpha-medium" padding="16" radius="m">
      <Row padding="8">Row Item</Row>
      <Row padding="8">Row Item</Row>
    </Column>
    <Column fillWidth border="neutral-alpha-medium" padding="16" radius="m">
      <Row padding="8">Row Item</Row>
      <Row padding="8">Row Item</Row>
    </Column>
</Row>`,
        language: "tsx",
        label: "Layout"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/flex" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

### Grid

Use the grid to construct responsive grid layouts. It can be styled similarly to the Flex element.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    preview={
    <Grid
      fillWidth
      columns="3"
      mobileColumns="2"
      gap="16"
    >
      <Column border="neutral-alpha-medium" padding="16" radius="m">
        <Text>Grid Item</Text>
      </Column>
      <Column border="neutral-alpha-medium" padding="16" radius="m">
        <Text>Grid Item</Text>
      </Column>
      <Column border="neutral-alpha-medium" padding="16" radius="m">
        <Text>Grid Item</Text>
      </Column>
      <Column border="neutral-alpha-medium" padding="16" radius="m">
        <Text>Grid Item</Text>
      </Column>
      <Column border="neutral-alpha-medium" padding="16" radius="m">
        <Text>Grid Item</Text>
      </Column>
      <Column border="neutral-alpha-medium" padding="16" radius="m">
        <Text>Grid Item</Text>
      </Column>
    </Grid>}
    codeHeight={24}
    codes={[
      {
        code:
`<Grid
    fillWidth
    columns="3"
    mobileColumns="2"
    gap="16"
  >
    <Column border="neutral-alpha-medium" padding="16" radius="m">
      <Text>Grid Item</Text>
    </Column>
    <Column border="neutral-alpha-medium" padding="16" radius="m">
      <Text>Grid Item</Text>
    </Column>
    <Column border="neutral-alpha-medium" padding="16" radius="m">
      <Text>Grid Item</Text>
    </Column>
    <Column border="neutral-alpha-medium" padding="16" radius="m">
      <Text>Grid Item</Text>
    </Column>
    <Column border="neutral-alpha-medium" padding="16" radius="m">
      <Text>Grid Item</Text>
    </Column>
    <Column border="neutral-alpha-medium" padding="16" radius="m">
      <Text>Grid Item</Text>
    </Column>
</Grid>`,
        language: "tsx",
        label: "Layout"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/grid" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

## Media

Media provides an optimized way to display images. Access it with the `Media` component for full customization or use the markdown syntax.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    codeHeight={24}
    preview={<Media src="/images/projects/project-01/cover-01.jpg" alt="Example image" sizes="640px" aspectRatio="16/9" radius="l" />}
    codes={[
      {
        code:
`<Media
    src="/images/projects/project-01/cover-01.jpg"
    sizes="640px"
    alt="Example image"
    aspectRatio="16/9"
    radius="l"
/>`,
        language: "tsx",
        label: "Media"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/Media" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

You can also use it to embed YouTube videos.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    codeHeight={24}
    preview={<Media src="https://www.youtube.com/watch?v=TQT_FSdxbC8" alt="Example video" aspectRatio="16/9" radius="l" />}
    codes={[
      {
        code:
`<Media
    src="https://www.youtube.com/watch?v=TQT_FSdxbC8"
    alt="Example video"
    aspectRatio="16/9"
    radius="l"
/>`,
        language: "tsx",
        label: "Media"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/Media" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

## Link

SmartLink provides an enhanced way to link to internal and external resources. You can access it with the `SmartLink` component for full customization or with the standard markdown syntax.

<Column fillWidth gap="-1" marginBottom="16" marginTop="8">
<CodeBlock
    radius="none"
    topRadius="l"
    preview={
      <Row  fillWidth horizontal="center">
        <SmartLink href=" " suffixIcon="chevronRight">Link with icon</SmartLink>
      </Row>
    }
    codes={[
      {
        code:
`<SmartLink href=" " suffixIcon="chevronRight">Link with icon</SmartLink>`,
        language: "tsx",
        label: "SmartLink"
      }
    ]}
/>
<Row fillWidth bottomRadius="l" padding="4" border="neutral-medium" background="surface">
    <Button href="https://once-ui.com/docs/smart-link" weight="default" label="View on Once UI" size="s" variant="tertiary" suffixIcon="chevronRight"/>
</Row>
</Column>

## Custom components

Since Magic Portfolio is based on Once UI, you can use all the components provided by Once UI in the `.mdx` files, but you need to import them first in the `src/product/mdx.tsx` file and pass it to the `components` object.

<CodeBlock
    marginBottom="16" marginTop="8"
    highlight="2"
    codes={[
      {
        code:
`const components = {
    // Add new components
    p: createParagraph as any,
    h1: createHeading("h1") as any,
    ...
    Media,
    SmartLink,
};`,
        language: "tsx",
        label: "src/product/mdx.tsx"
      }
    ]}
/>b:T8e2,
## Manage projects

You can create, edit and delete projects by adding, modifying or removing `*.mdx` files in the `src/app/work/projects` directory.

## Frontmatter

The frontmatter is used to set the project's metadata: title, description, image, and tags. It's used in the project's page and in meta- and open graph tags.

<CodeBlock
    marginBottom="16"
    codes={[
      {
        code:
`---
title: "Developing a design system for indie creators"
publishedAt: "2025-03-17"
summary: "Once UI is a design system that empowers indie creators, small teams, and startups to build web applications."
images:
  - "/images/projects/project-01/cover-02.jpg"
  - "/images/projects/project-01/image-03.jpg"
team:
  - name: "Lorant One"
    role: "Software Engineer"
    avatar: "/images/avatar.jpg"
    linkedIn: "https://www.linkedin.com/company/once-ui/"
link: "https://once-ui.com/"
---`,
        language: "tsx",
        label: "src/app/work/projects/project-1.mdx"
      }
    ]}
/>

## MDX syntax

You can use MDX to write the content of your projects. It helps you write rich and dynamic content with minimal code. Some MDX elements will be automatically transformed to Once UI components to integrate better in the design and add additional functionality.

## Custom components

You can use custom components in MDX files, but you need to import them first in the `src/components/mdx.tsx` file.

<CodeBlock
    marginBottom="16"
    highlight="11-12"
    codes={[
      {
        code:
`const components = {
    p: createParagraph as any,
    h1: createHeading(1) as any,
    h2: createHeading(2) as any,
    h3: createHeading(3) as any,
    h4: createHeading(4) as any,
    h5: createHeading(5) as any,
    h6: createHeading(6) as any,
    img: createImage as any,
    a: CustomLink as any,
    Table,
    CodeBlock,
};`,
        language: "tsx",
        label: "src/components/mdx.tsx"
      }
    ]}
/>

As you can see, the `Table` and `CodeBlock` components are already imported and available for use. You can add more by simply importing them to this file and passing them to the `components` object.

## Hot reload

Hot reload of MDX files is currently not supported, but we're working on it.c:Td02,
## Avatar

Replace the `public/images/avatar.jpg` file with your own avatar image. It is used on the `/about` page as well as on the dynamically generated `open-graph` images.

## Favicon

Replace the `src/app/favicon.ico` file with your own favicon.

## Content

Replace the content in the `resources/content.js` file with your own content. You can use custom components in most cases, since the props are usually declared as `ReactNode` instead of `string`, but it's important that you need to import them in the file.

<CodeBlock
    marginBottom="16"
    highlight="1-2"
    codes={[
  {
    code:
`import { InlineCode } from "@once-ui-system/core";
import Link from "next/link";

const person = {
  ...
};`,
    language: "tsx",
    label: "src/app/resources/content.js"
  }
]} />

The imports above would let us use `InlineCode` and `Link` components in the content file.

### Personal details

Your personal details are used across the whole app to render personalized headings, labels and images. Languages are displayed on the `/about` page, and location and time in the header.

<CodeBlock
    marginBottom="16"
    highlight="2-3,7-10"
    codes={[
  {
    code:
`const person = {
    firstName: "Selene",
    lastName: "Yu",
    get name() {
      return "...";
    },
    role: "Design Engineer",
    avatar: "/images/avatar.jpg",
    location: "Asia/Jakarta", // Expecting the IANA time zone identifier, e.g., 'Europe/Vienna'
    languages: ["English", "Bahasa"], // optional: Leave the array empty if you don't want to display languages
};`,
    language: "tsx",
    label: "src/app/resources/content.js"
  }
]} />

### Social links

Social links are rendered on the `/about` page and in the footer based on the array configured in the `social` object. You can set custom icons to each, but don't forget to import them in `src/once-ui/icons.ts`. Read the Once UI documentation](https://once-ui.com/docs/icons) for more information.

<CodeBlock
    marginBottom="16"
    codes={[
  {
    code:
`const social = [
    {
      name: "GitHub",
      icon: "github",
      link: "https://github.com/once-ui-system/nextjs-starter",
    },
    {
      name: "Email",
      icon: "email",
      link: "mailto:lorant@once-ui.com",
    },
];`,
    language: "tsx",
    label: "src/app/resources/content.js"
  }
]} />

### Pages

Each page have it's own object that manages the personalized content, such as headings, subheadings, images and dynamic data.

<CodeBlock
    marginBottom="16"
    codes={[
  {
    code:
`const home = {
    label: "Home",
    title: "Selene Yu's Portfolio",
    description: "Portfolio website showcasing my work as a Design Engineer",
    headline: <>Design engineer and builder</>,
    subline: (
      <>
        I'm Selene, a design engineer at <InlineCode>FLY</InlineCode>, where I craft intuitive
        <br /> user experiences. After hours, I build my own projects.
      </>
    ),
};`,
    language: "tsx",
    label: "src/app/resources/content.js"
  }
]} />

The `label` property is used in the header navigation. The `title` property is used for the page title and the `description` property is used for the page description. They are also used in meta- and open graph tags.d:T94e,
## Mailchimp account

Sign up for a [Mailchimp account](https://mailchimp.com) and create a new list if you don't have one.

## Embed form

Create a new [embed form](https://mailchimp.com/help/add-a-signup-form-to-your-website/) and copy the form URL to your Magic Portfolio config.

<CodeBlock
    highlight="2"
    codes={[
  {
    code:
`const mailchimp = {
    action: 'https://url/subscribe/post?parameters',
    effects: {
      ...
    }
};`, 
    language: "tsx",
    label: "src/app/resources/config.js"
  }
]} />

## Newsletter content

You can modify the headline and description in the `content.js` file.

<CodeBlock
    highlight="2"
    codes={[
  {
    code:
`const newsletter = {
    display: true,
    title: <>Subscribe to {person.firstName}'s Newsletter</>,
    description: (
      <>
        I occasionally write about design, technology, and share thoughts on the intersection of creativity and engineering.
      </>
    ),
};`, 
    language: "tsx",
    label: "src/app/resources/content.js"
  }
]} />

## Background effect

There's a pre-configured background in `Mailchimp.tsx` that you can modify in the `mailchimp` object. Set graphic elements such as gradient, dots, lines, and grid and configure their appearance for the newsletter block.

<CodeBlock
    codeHeight={24}
    marginBottom="16"
    codes={[
  {
    code:
`const mailchimp = {
    action: 'https://url/subscribe/post?parameters',
    effects: {
      mask: {
        cursor: false,
        x: 50,
        y: 0,
        radius: 100
      },
      gradient: {
        display: true,
        x: 50,
        y: -25,
        width: 100,
        height: 100,
        tilt: 0,
        colorStart: 'accent-background-strong',
        colorEnd: 'static-transparent',
        opacity: 50
      },
      dots: {
        display: true,
        size: 2,
        color: 'brand-on-background-weak',
        opacity: 20
      },
      lines: {
        display: false,
        color: 'neutral-alpha-weak',
        opacity: 100
      },
      grid: {
        display: false,
        color: 'neutral-alpha-weak',
        opacity: 100,
        width: 'var(--static-space-32)',
        height: 'var(--static-space-32)'
      }
  }
}`, 
    language: "tsx",
    label: "src/app/resources/config.js"
  }
]} />e:T4d5,
## Meta tags

Magic Portfolio automatically generates meta- and open graph tags for your pages based on the `content.js` file.

## Schema

Magic Portfolio automatically generates schema tags for your pages based on the `content.js` file.

## Open Graph image

Social sharing images (open-graph and twitter) are automatically generated with `next/og`.

<Feedback
    icon
    marginBottom="16"
    description={<>
        Make sure you have updated the <InlineCode>content.js</InlineCode> file with your own information and the <InlineCode>baseURL</InlineCode> variable in the <InlineCode>config.js</InlineCode> file.
    </>}
/>

<CodeBlock
    marginBottom="16"
    highlight="4"
    codes={[
      {
        code:
`export async function generateMetadata() {
  const title = home.title;
  const description = home.description;
  const ogImage = \`https://\/api/og/generate?title=\${encodeURIComponent(title)}\`;
   ...
};`,
        language: "tsx",
        label: "src/app/{page}/page.tsx"
      }
    ]}
/>

The above declaration generates the social image with the title of the page. You can use a static image by replacing the `ogImage` value with a path to an image in the `public` directory.f:T7e2,
## Manage posts

You can create, edit and delete posts by adding, modifying or removing `*.mdx` files in the `src/app/blog/posts` directory.

## Frontmatter

The frontmatter is used to set the post's metadata: title, description, image, and tags. It's used in the post's page and in meta- and open graph tags.

<CodeBlock
    marginBottom="16"
    codes={[
      {
        code:
`---
title: "Arriving to a new milestone in my career"
publishedAt: "2024-04-08"
image: "/images/gallery/img-02.jpg"
summary: "Every career is a journey, filled with challenges, growth, and those significant moments that mark a shift in our path."
tag: "Journal"
---`,
        language: "tsx",
        label: "src/app/blog/posts/post-1.mdx"
      }
    ]}
/>

## MDX syntax

You can use MDX to write the content of your posts. It helps you write rich and dynamic content with minimal code. Some MDX elements will be automatically transformed to Once UI components to integrate better in the design and add additional functionality.

## Custom components

You can use custom components in MDX files, but you need to import them first in the `src/components/mdx.tsx` file.

<CodeBlock
    marginBottom="16"
    highlight="11-12"
    codes={[
      {
        code:
`const components = {
    p: createParagraph as any,
    h1: createHeading(1) as any,
    h2: createHeading(2) as any,
    h3: createHeading(3) as any,
    h4: createHeading(4) as any,
    h5: createHeading(5) as any,
    h6: createHeading(6) as any,
    img: createImage as any,
    a: CustomLink as any,
    Table,
    CodeBlock,
};`,
        language: "tsx",
        label: "src/components/mdx.tsx"
      }
    ]}
/>

As you can see, the `Table` and `CodeBlock` components are already imported and available for use. You can add more by simply importing them to this file and passing them to the `components` object.

## Hot reload

Hot reload of MDX files is currently not supported, but we're working on it.0:{"P":null,"b":"HA-gHGnLqoBFlatr6Iu-u","p":"","c":["","blog"],"i":false,"f":[[["",{"children":["blog",{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0fa6d1f2668da893.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/68b8b397103f6052.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/4b2efc9bab881985.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/c2000b85886bf461.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","4",{"rel":"stylesheet","href":"/_next/static/css/dde74e833c17b4cf.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","5",{"rel":"stylesheet","href":"/_next/static/css/ef46db3751d8e999.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],"$L2"]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","div",null,{"ref":"$undefined","className":"display-flex flex-column fill-width position-relative","style":{"maxWidth":"var(--responsive-width-s)","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":[["$","$L5",null,{"id":"schema-blogPosting-/blog","type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"url\":\"https://demo.magic-portfolio.com/blog\",\"sameAs\":[],\"headline\":\"Writing about design and tech...\",\"description\":\"Read what Nihad Veliyev has been up to recently\",\"image\":\"https://demo.magic-portfolio.com/api/og/generate?title=Writing%20about%20design%20and%20tech...\",\"author\":{\"@type\":\"Person\",\"name\":\"Nihad Veliyev\",\"url\":\"https://demo.magic-portfolio.com/blog\",\"image\":{\"@type\":\"ImageObject\",\"url\":\"https://demo.magic-portfolio.com/images/avatar.jpg\"}}}"}}],["$","h1",null,{"className":"font-display font-strong font-s neutral-on-background-strong mb-l","style":{"textAlign":"$undefined","textWrap":"balance"},"children":"Writing about design and tech..."}],["$","div",null,{"ref":"$undefined","className":"display-flex flex-column flex-1 min-width-0 fill-width position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":[["$","div",null,{"ref":"$undefined","className":"display-grid fill-width columns-1 mobile-columns-1 mb-40 g-12 position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":[["$","$L6","quick-start",{"post":{"metadata":{"title":"Quick start with Magic Portfolio","publishedAt":"2025-04-23","summary":"Magic Portfolio is a comprehensive, MDX-based, SEO-friendly, responsive portfolio template built with Once UI and Next.js.","image":"/images/og/home.jpg","images":[],"tag":"Magic Portfolio","team":[],"link":""},"slug":"quick-start","content":"$7"},"thumbnail":true,"direction":"column"}]]}],["$","div",null,{"ref":"$undefined","className":"display-grid fill-width columns-1 mobile-columns-1 mb-40 g-12 position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":[["$","$L6","pages",{"post":{"metadata":{"title":"Enable or disable pages for your portfolio","publishedAt":"2025-04-22","summary":"Magic Portfolio's RouteGuard component takes care of conditionally rendering pages based on your settings.","image":"","images":[],"tag":"Magic Portfolio","team":[],"link":""},"slug":"pages","content":"$8"},"thumbnail":true,"direction":"$undefined"}],["$","$L6","styling",{"post":{"metadata":{"title":"Styling your portfolio","publishedAt":"2025-04-21","summary":"Magic Portfolio's styling is based on Once UI's customization through data-attributes.","image":"","images":[],"tag":"Magic Portfolio","team":[],"link":""},"slug":"styling","content":"$9"},"thumbnail":true,"direction":"$undefined"}]]}],["$","div",null,{"ref":"$undefined","className":"display-grid fill-width columns-2 mobile-columns-1 mb-40 g-12 position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":[["$","$L6","components",{"post":{"metadata":{"title":"Using custom components in markdown","publishedAt":"2025-04-20","summary":"Every career is a journey, filled with challenges, growth, and those significant moments that mark a shift in our path.","image":"","images":[],"tag":"Magic Portfolio","team":[],"link":""},"slug":"components","content":"$a"},"thumbnail":false,"direction":"$undefined"}],["$","$L6","work",{"post":{"metadata":{"title":"Create,edit and delete projects","publishedAt":"2025-04-19","summary":"Create, edit and delete projects in the work section of your Magic Portfolio.","image":"","images":[],"tag":"Magic Portfolio","team":[],"link":""},"slug":"work","content":"$b"},"thumbnail":false,"direction":"$undefined"}],["$","$L6","content",{"post":{"metadata":{"title":"Updating the content of Magic Portfolio","publishedAt":"2025-04-18","summary":"Personalize the portfolio template with your own content.","image":"","images":[],"tag":"Magic Portfolio","team":[],"link":""},"slug":"content","content":"$c"},"thumbnail":false,"direction":"$undefined"}],["$","$L6","password",{"post":{"metadata":{"title":"Create password protected pages","publishedAt":"2025-04-17","summary":"Create password protected pages through the RouteGuard component.","image":"","images":[],"tag":"Magic Portfolio","team":[],"link":""},"slug":"password","content":"\r\n## Add protected pages\r\n\r\nTo enable password protection for specific pages, add the page paths you want to protect to the `protectedRoutes` object in the `resources/config.js` file.\r\n\r\nThe `RouteGuard` component will automatically handle access control for these pages, requiring password authentication before allowing access.\r\n\r\n<CodeBlock\r\n    marginBottom=\"16\"\r\n    highlight=\"2\"\r\n    codes={[\r\n  {\r\n    code:\r\n`const protectedRoutes = {\r\n  '/work/once-ui': true\r\n};`,\r\n    language: \"tsx\",\r\n    label: \"src/app/resources/config.js\"\r\n  }\r\n]} />\r\n\r\nThe code above will ensure that the `/work/once-ui` page is only accessible after providing a password. \r\n\r\n## Set a password\r\n\r\nThe password can be set in the `.env.local` file for local development and as an [environment variable](https://vercel.com/docs/environment-variables) for production."},"thumbnail":false,"direction":"$undefined"}],["$","$L6","mailchimp",{"post":{"metadata":{"title":"Set up Mailchimp and collect emails","publishedAt":"2025-04-16","summary":"Set up the Mailchimp newsletter block for your Magic Portfolio.","image":"","images":[],"tag":"Magic Portfolio","team":[],"link":""},"slug":"mailchimp","content":"$d"},"thumbnail":false,"direction":"$undefined"}],["$","$L6","localization",{"post":{"metadata":{"title":"Localized version of Magic Portfolio","publishedAt":"2025-04-15","summary":"Magic Portfolio was localized by François Hernandez.","image":"","images":[],"tag":"Magic Portfolio","team":[],"link":""},"slug":"localization","content":"\r\nIn the latest version of Magic Portfolio, localization is no longer supported. However, the localized version created by [François Hernandez](https://github.com/francoishernandez) is still available as a [separate branch](https://github.com/once-ui-system/magic-portfolio/tree/localization-(Once-UI-0.4.2)). This branch will not receive further updates."},"thumbnail":false,"direction":"$undefined"}],["$","$L6","seo",{"post":{"metadata":{"title":"SEO settings for Magic Portfolio","publishedAt":"2025-04-14","summary":"Manage your Magic Portfolio's SEO settings.","image":"","images":[],"tag":"Magic Portfolio","team":[],"link":""},"slug":"seo","content":"$e"},"thumbnail":false,"direction":"$undefined"}],["$","$L6","blog",{"post":{"metadata":{"title":"Create, edit and delete blog posts","publishedAt":"2025-03-17","summary":"Create, edit and delete posts in the blog section of your Magic Portfolio.","image":"","images":[],"tag":"Magic Portfolio","team":[],"link":""},"slug":"blog","content":"$f"},"thumbnail":false,"direction":"$undefined"}]]}]]}],["$","$L10",null,{"newsletter":{"display":true,"title":["Subscribe to ","Nihad","'s Newsletter"],"description":"I occasionally write about design, technology, and share thoughts on the intersection of creativity and engineering."}}]]}],["$","$L11",null,{"children":"$L12"}],null,["$","$L13",null,{"children":["$L14","$L15",["$","$L16",null,{"promise":"$@17"}]]}]]}],{},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","SXLcPxED0-3M7-ra0WFTz",{"children":[["$","$L18",null,{"children":"$L19"}],null]}],null]}],false]],"m":"$undefined","G":["$1a","$undefined"],"s":false,"S":true}
1c:I[81249,["760","static/chunks/f7333993-9afb768739e4a113.js","506","static/chunks/f97e080b-4671e2b299f6113a.js","446","static/chunks/53c13509-9bf35df096df279b.js","843","static/chunks/843-944049e8d7e6807b.js","557","static/chunks/557-13d6bb43fd59e69c.js","400","static/chunks/400-1ef676e9362ab98e.js","831","static/chunks/app/blog/page-444bbc96a3b60ae6.js"],"Providers"]
1d:I[17456,["760","static/chunks/f7333993-9afb768739e4a113.js","506","static/chunks/f97e080b-4671e2b299f6113a.js","446","static/chunks/53c13509-9bf35df096df279b.js","843","static/chunks/843-944049e8d7e6807b.js","557","static/chunks/557-13d6bb43fd59e69c.js","400","static/chunks/400-1ef676e9362ab98e.js","831","static/chunks/app/blog/page-444bbc96a3b60ae6.js"],"Background"]
1e:I[94615,["760","static/chunks/f7333993-9afb768739e4a113.js","506","static/chunks/f97e080b-4671e2b299f6113a.js","446","static/chunks/53c13509-9bf35df096df279b.js","843","static/chunks/843-944049e8d7e6807b.js","557","static/chunks/557-13d6bb43fd59e69c.js","400","static/chunks/400-1ef676e9362ab98e.js","831","static/chunks/app/blog/page-444bbc96a3b60ae6.js"],"Header"]
1f:I[55380,["760","static/chunks/f7333993-9afb768739e4a113.js","506","static/chunks/f97e080b-4671e2b299f6113a.js","446","static/chunks/53c13509-9bf35df096df279b.js","843","static/chunks/843-944049e8d7e6807b.js","557","static/chunks/557-13d6bb43fd59e69c.js","400","static/chunks/400-1ef676e9362ab98e.js","831","static/chunks/app/blog/page-444bbc96a3b60ae6.js"],"RouteGuard"]
20:I[73405,["760","static/chunks/f7333993-9afb768739e4a113.js","506","static/chunks/f97e080b-4671e2b299f6113a.js","446","static/chunks/53c13509-9bf35df096df279b.js","843","static/chunks/843-944049e8d7e6807b.js","557","static/chunks/557-13d6bb43fd59e69c.js","400","static/chunks/400-1ef676e9362ab98e.js","831","static/chunks/app/blog/page-444bbc96a3b60ae6.js"],"SmartLink"]
21:I[94121,["760","static/chunks/f7333993-9afb768739e4a113.js","506","static/chunks/f97e080b-4671e2b299f6113a.js","446","static/chunks/53c13509-9bf35df096df279b.js","843","static/chunks/843-944049e8d7e6807b.js","557","static/chunks/557-13d6bb43fd59e69c.js","400","static/chunks/400-1ef676e9362ab98e.js","831","static/chunks/app/blog/page-444bbc96a3b60ae6.js"],"IconButton"]
22:"$Sreact.suspense"
23:I[74911,[],"AsyncMetadata"]
1b:T76b,
              (function() {
                try {
                  const root = document.documentElement;
                  const defaultTheme = 'system';
                  
                  // Set defaults from config
                  const config = {"brand":"cyan","accent":"red","neutral":"gray","solid":"contrast","solid-style":"flat","border":"playful","surface":"translucent","transition":"all","scaling":"100","viz-style":"gradient"};
                  
                  // Apply default values
                  Object.entries(config).forEach(([key, value]) => {
                    root.setAttribute('data-' + key, value);
                  });
                  
                  // Resolve theme
                  const resolveTheme = (themeValue) => {
                    if (!themeValue || themeValue === 'system') {
                      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
                    }
                    return themeValue;
                  };
                  
                  // Apply saved theme
                  const savedTheme = localStorage.getItem('data-theme');
                  const resolvedTheme = resolveTheme(savedTheme);
                  root.setAttribute('data-theme', resolvedTheme);
                  
                  // Apply any saved style overrides
                  const styleKeys = Object.keys(config);
                  styleKeys.forEach(key => {
                    const value = localStorage.getItem('data-' + key);
                    if (value) {
                      root.setAttribute('data-' + key, value);
                    }
                  });
                } catch (e) {
                  console.error('Failed to initialize theme:', e);
                  document.documentElement.setAttribute('data-theme', 'dark');
                }
              })();
            2:["$","html",null,{"ref":"$undefined","className":"display-flex min-width-0 fill-width position-relative __variable_5cfdac __variable_5cfdac __variable_5cfdac __variable_9a8899","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"suppressHydrationWarning":true,"lang":"en","children":[["$","head",null,{"children":["$","script",null,{"id":"theme-init","dangerouslySetInnerHTML":{"__html":"$1b"}}]}],["$","$L1c",null,{"children":["$","body",null,{"ref":"$undefined","className":"display-flex p-0 m-0 page-background flex-column align-center min-width-0 fill-width position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"100vh","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":[["$","$L1d",null,{"position":"fixed","mask":{"x":50,"y":0,"radius":100,"cursor":false},"gradient":{"display":false,"opacity":100,"x":50,"y":60,"width":100,"height":50,"tilt":0,"colorStart":"accent-background-strong","colorEnd":"page-background"},"dots":{"display":true,"opacity":40,"size":"2","color":"brand-background-strong"},"grid":{"display":false,"opacity":100,"color":"neutral-alpha-medium","width":"0.25rem","height":"0.25rem"},"lines":{"display":false,"opacity":100,"size":"16","thickness":1,"angle":45,"color":"neutral-alpha-weak"}}],["$","div",null,{"ref":"$undefined","className":"display-flex s-flex-hide min-width-0 fill-width position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"var(--static-space-16)","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":"$undefined"}],["$","$L1e",null,{}],["$","div",null,{"ref":"$undefined","className":"display-flex p-l flex-1 justify-center min-width-0 fill-width position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":["$","div",null,{"ref":"$undefined","className":"display-flex justify-center min-width-0 fill-width position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"var(--static-space-0)","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":["$","$L1f",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","section",null,{"ref":"$undefined","className":"display-flex pb-160 flex-column center fill min-height-0 min-width-0 position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":[["$","span",null,{"className":"font-display font-strong font-xl mb-s","style":{"textAlign":"$undefined","textWrap":"$undefined"},"children":"404"}],["$","h1",null,{"className":"font-display font-default font-xs neutral-on-background-strong mb-l","style":{"textAlign":"$undefined","textWrap":"balance"},"children":"Page Not Found"}],["$","span",null,{"className":"neutral-on-background-weak","style":{"textAlign":"$undefined","textWrap":"$undefined"},"children":"The page you are looking for does not exist."}]]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}],["$","footer",null,{"ref":"$undefined","className":"display-flex p-8 s-flex-column justify-center min-width-0 fill-width position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":[["$","div",null,{"ref":"$undefined","className":"display-flex px-16 py-8 g-16 justify-space-between align-center fill-width position-relative Footer_mobile__TYNqJ","style":{"maxWidth":"var(--responsive-width-m)","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":[["$","span",null,{"className":"font-body font-default font-s neutral-on-background-strong","style":{"textAlign":"$undefined","textWrap":"$undefined"},"children":[["$","span",null,{"className":"neutral-on-background-weak","style":{"textAlign":"$undefined","textWrap":"$undefined"},"children":["© ",2025," /"]}],["$","span",null,{"className":"px-4","style":{"textAlign":"$undefined","textWrap":"$undefined"},"children":"Nihad Veliyev"}],["$","span",null,{"className":"neutral-on-background-weak","style":{"textAlign":"$undefined","textWrap":"$undefined"},"children":["/ Build your portfolio with"," ",["$","$L20",null,{"href":"https://once-ui.com/products/magic-portfolio","children":"Once UI"}]]}]]}],["$","div",null,{"ref":"$undefined","className":"display-flex g-16 position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"$undefined","aspectRatio":"$undefined","textAlign":"$undefined"},"children":[["$","$L21","GitHub",{"href":"https://github.com/once-ui-system/nextjs-starter","icon":"github","tooltip":"GitHub","size":"s","variant":"ghost"}],["$","$L21","LinkedIn",{"href":"https://www.linkedin.com/company/once-ui/","icon":"linkedin","tooltip":"LinkedIn","size":"s","variant":"ghost"}],["$","$L21","Threads",{"href":"https://www.threads.com/@once_ui","icon":"threads","tooltip":"Threads","size":"s","variant":"ghost"}],["$","$L21","Email",{"href":"mailto:example@gmail.com","icon":"email","tooltip":"Email","size":"s","variant":"ghost"}]]}]]}],["$","div",null,{"ref":"$undefined","className":"display-flex s-flex-show position-relative","style":{"maxWidth":"$undefined","minWidth":"$undefined","minHeight":"$undefined","maxHeight":"$undefined","width":"$undefined","height":"var(--static-space-80)","aspectRatio":"$undefined","textAlign":"$undefined"},"children":"$undefined"}]]}]]}]}]]}]
12:["$","$22",null,{"fallback":null,"children":["$","$L23",null,{"promise":"$@24"}]}]
15:null
19:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
14:null
24:{"metadata":[["$","title","0",{"children":"Writing about design and tech..."}],["$","meta","1",{"name":"description","content":"Read what Nihad Veliyev has been up to recently"}],["$","meta","2",{"property":"og:title","content":"Writing about design and tech..."}],["$","meta","3",{"property":"og:description","content":"Read what Nihad Veliyev has been up to recently"}],["$","meta","4",{"property":"og:url","content":"https://demo.magic-portfolio.com/blog"}],["$","meta","5",{"property":"og:image","content":"https://demo.magic-portfolio.com/api/og/generate?title=Writing%20about%20design%20and%20tech..."}],["$","meta","6",{"property":"og:image:alt","content":"Writing about design and tech..."}],["$","meta","7",{"property":"og:type","content":"website"}],["$","meta","8",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","9",{"name":"twitter:title","content":"Writing about design and tech..."}],["$","meta","10",{"name":"twitter:description","content":"Read what Nihad Veliyev has been up to recently"}],["$","meta","11",{"name":"twitter:image","content":"https://demo.magic-portfolio.com/api/og/generate?title=Writing%20about%20design%20and%20tech..."}],["$","link","12",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"120x120"}]],"error":null,"digest":"$undefined"}
17:{"metadata":"$24:metadata","error":null,"digest":"$undefined"}
